// src/lib/reports/pdfGenerator.ts

import jsPDF from 'jspdf';
import 'jspdf-autotable';
import { Chart } from 'chart.js/auto';
import html2canvas from 'html2canvas';

// إضافة الخطوط العربية
import '@/assets/fonts/Amiri-Regular.ttf';
import '@/assets/fonts/PlayfairDisplay-Regular.ttf';

export interface ReportData {
  companyInfo: {
    name: string;
    sector: string;
    legalEntity: string;
    analysisDate: Date;
  };
  executiveSummary: {
    overview: string;
    keyFindings: string[];
    recommendations: string[];
  };
  analysisResults: any[];
  charts: any[];
  language: 'ar' | 'en';
}

export async function generatePDFReport(data: ReportData): Promise<Blob> {
  const pdf = new jsPDF({
    orientation: 'portrait',
    unit: 'mm',
    format: 'a4'
  });

  // إعداد الخطوط
  if (data.language === 'ar') {
    pdf.addFont('Amiri-Regular.ttf', 'Amiri', 'normal');
    pdf.setFont('Amiri');
    pdf.setR2L(true);
  } else {
    pdf.setFont('helvetica');
  }

  // الألوان
  const goldColor = [212, 175, 55];
  const blackColor = [0, 0, 0];

  // صفحة الغلاف
  await addCoverPage(pdf, data);

  // فهرس المحتويات
  pdf.addPage();
  await addTableOfContents(pdf, data);

  // الملخص التنفيذي
  pdf.addPage();
  await addExecutiveSummary(pdf, data);

  // نتائج التحليل المفصلة
  for (const analysis of data.analysisResults) {
    pdf.addPage();
    await addAnalysisSection(pdf, analysis, data.language);
  }

  // الرسوم البيانية
  if (data.charts && data.charts.length > 0) {
    pdf.addPage();
    await addChartsSection(pdf, data.charts, data.language);
  }

  // التوصيات النهائية
  pdf.addPage();
  await addFinalRecommendations(pdf, data);

  // إضافة أرقام الصفحات
  addPageNumbers(pdf);

  // إضافة العلامة المائية
  addWatermark(pdf, data.language);

  return pdf.output('blob');
}

async function addCoverPage(pdf: jsPDF, data: ReportData) {
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();

  // خلفية سوداء
  pdf.setFillColor(0, 0, 0);
  pdf.rect(0, 0, pageWidth, pageHeight, 'F');

  // الشعار
  const logoImg = await loadImage('/logo.png');
  pdf.addImage(logoImg, 'PNG', pageWidth / 2 - 25, 30, 50, 50);

  // العنوان الرئيسي
  pdf.setTextColor(212, 175, 55);
  pdf.setFontSize(32);
  pdf.text('FinClick.AI', pageWidth / 2, 100, { align: 'center' });

  pdf.setFontSize(18);
  pdf.text(
    data.language === 'ar' ? 'تقرير التحليل المالي الشامل' : 'Comprehensive Financial Analysis Report',
    pageWidth / 2,
    120,
    { align: 'center' }
  );

  // معلومات الشركة
  pdf.setFontSize(14);
  pdf.setTextColor(212, 175, 55, 0.8);
  
  const companyInfo = [
    data.companyInfo.name,
    data.companyInfo.sector,
    data.companyInfo.legalEntity,
    new Date(data.companyInfo.analysisDate).toLocaleDateString(
      data.language === 'ar' ? 'ar-SA' : 'en-US'
    )
  ];

  let yPosition = 160;
  companyInfo.forEach(info => {
    pdf.text(info, pageWidth / 2, yPosition, { align: 'center' });
    yPosition += 10;
  });

  // خط فاصل ذهبي
  pdf.setDrawColor(212, 175, 55);
  pdf.setLineWidth(0.5);
  pdf.line(40, 200, pageWidth - 40, 200);

  // معلومات النظام
  pdf.setFontSize(10);
  pdf.setTextColor(212, 175, 55, 0.6);
  pdf.text(
    data.language === 'ar' ? 
      'تم إنشاؤه بواسطة منصة التحليل المالي الذكي الثوري' : 
      'Generated by Revolutionary Intelligent Financial Analysis Platform',
    pageWidth / 2,
    pageHeight - 30,
    { align: 'center' }
  );

  pdf.text(
    '© 2025 FinClick.AI - All Rights Reserved',
    pageWidth / 2,
    pageHeight - 20,
    { align: 'center' }
  );
}

async function addTableOfContents(pdf: jsPDF, data: ReportData) {
  const pageWidth = pdf.internal.pageSize.getWidth();
  
  // عنوان الصفحة
  pdf.setFontSize(24);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'فهرس المحتويات' : 'Table of Contents',
    pageWidth / 2,
    30,
    { align: 'center' }
  );

  // قائمة المحتويات
  const contents = [
    { title: data.language === 'ar' ? 'الملخص التنفيذي' : 'Executive Summary', page: 3 },
    { title: data.language === 'ar' ? 'التحليل الهيكلي' : 'Structural Analysis', page: 4 },
    { title: data.language === 'ar' ? 'النسب المالية' : 'Financial Ratios', page: 8 },
    { title: data.language === 'ar' ? 'تحليل التدفقات' : 'Cash Flow Analysis', page: 15 },
    { title: data.language === 'ar' ? 'التحليلات المتقدمة' : 'Advanced Analysis', page: 20 },
    { title: data.language === 'ar' ? 'الرسوم البيانية' : 'Charts & Graphs', page: 30 },
    { title: data.language === 'ar' ? 'التوصيات' : 'Recommendations', page: 40 }
  ];

  pdf.setFontSize(12);
  pdf.setTextColor(0, 0, 0);
  
  let yPosition = 60;
  contents.forEach((item, index) => {
    // العنوان
    pdf.text(`${index + 1}. ${item.title}`, 30, yPosition);
    
    // النقاط
    const dotsWidth = pageWidth - 120;
    const dots = '.'.repeat(Math.floor(dotsWidth / 2));
    pdf.setTextColor(150, 150, 150);
    pdf.text(dots, 70, yPosition);
    
    // رقم الصفحة
    pdf.setTextColor(0, 0, 0);
    pdf.text(item.page.toString(), pageWidth - 30, yPosition, { align: 'right' });
    
    yPosition += 15;
  });
}

async function addExecutiveSummary(pdf: jsPDF, data: ReportData) {
  const pageWidth = pdf.internal.pageSize.getWidth();
  
  // عنوان الصفحة
  pdf.setFontSize(24);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'الملخص التنفيذي' : 'Executive Summary',
    pageWidth / 2,
    30,
    { align: 'center' }
  );

  // النظرة العامة
  pdf.setFontSize(14);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'نظرة عامة' : 'Overview',
    30,
    50
  );

  pdf.setFontSize(11);
  pdf.setTextColor(0, 0, 0);
  const overviewLines = pdf.splitTextToSize(data.executiveSummary.overview, pageWidth - 60);
  pdf.text(overviewLines, 30, 60);

  // النتائج الرئيسية
  let yPosition = 100;
  pdf.setFontSize(14);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'النتائج الرئيسية' : 'Key Findings',
    30,
    yPosition
  );

  yPosition += 10;
  pdf.setFontSize(11);
  pdf.setTextColor(0, 0, 0);
  
  data.executiveSummary.keyFindings.forEach((finding, index) => {
    const bullet = data.language === 'ar' ? '•' : '•';
    pdf.text(`${bullet} ${finding}`, 35, yPosition);
    yPosition += 8;
  });

  // التوصيات
  yPosition += 10;
  pdf.setFontSize(14);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'التوصيات الرئيسية' : 'Key Recommendations',
    30,
    yPosition
  );

  yPosition += 10;
  pdf.setFontSize(11);
  pdf.setTextColor(0, 0, 0);
  
  data.executiveSummary.recommendations.forEach((recommendation, index) => {
    pdf.text(`${index + 1}. ${recommendation}`, 35, yPosition);
    yPosition += 8;
  });
}

async function addAnalysisSection(pdf: jsPDF, analysis: any, language: 'ar' | 'en') {
  const pageWidth = pdf.internal.pageSize.getWidth();
  
  // عنوان التحليل
  pdf.setFontSize(20);
  pdf.setTextColor(212, 175, 55);
  pdf.text(analysis.name, pageWidth / 2, 30, { align: 'center' });

  // تعريف التحليل
  pdf.setFontSize(12);
  pdf.setTextColor(0, 0, 0);
  const definitionLines = pdf.splitTextToSize(analysis.definition || '', pageWidth - 60);
  pdf.text(definitionLines, 30, 45);

  // جدول النتائج
  if (analysis.results && analysis.results.length > 0) {
    const tableData = analysis.results.map((result: any) => [
      result.metric,
      result.value,
      result.benchmark,
      result.evaluation
    ]);

    (pdf as any).autoTable({
      head: [[
        language === 'ar' ? 'المؤشر' : 'Metric',
        language === 'ar' ? 'القيمة' : 'Value',
        language === 'ar' ? 'المعيار' : 'Benchmark',
        language === 'ar' ? 'التقييم' : 'Evaluation'
      ]],
      body: tableData,
      startY: 70,
      theme: 'grid',
      headStyles: {
        fillColor: [212, 175, 55],
        textColor: [0, 0, 0],
        fontStyle: 'bold'
      },
      bodyStyles: {
        textColor: [0, 0, 0]
      },
      alternateRowStyles: {
        fillColor: [245, 245, 245]
      }
    });
  }

  // التفسير
  const finalY = (pdf as any).lastAutoTable?.finalY || 100;
  pdf.setFontSize(12);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    language === 'ar' ? 'التفسير والتحليل' : 'Interpretation & Analysis',
    30,
    finalY + 20
  );

  pdf.setFontSize(11);
  pdf.setTextColor(0, 0, 0);
  const interpretationLines = pdf.splitTextToSize(
    analysis.interpretation || '',
    pageWidth - 60
  );
  pdf.text(interpretationLines, 30, finalY + 30);
}

async function addChartsSection(pdf: jsPDF, charts: any[], language: 'ar' | 'en') {
  const pageWidth = pdf.internal.pageSize.getWidth();
  
  // عنوان الصفحة
  pdf.setFontSize(24);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    language === 'ar' ? 'الرسوم البيانية والمخططات' : 'Charts & Graphs',
    pageWidth / 2,
    30,
    { align: 'center' }
  );

  let yPosition = 50;
  
  for (const chartData of charts) {
    // إنشاء canvas للرسم البياني
    const canvas = document.createElement('canvas');
    canvas.width = 800;
    canvas.height = 400;
    
    // رسم الرسم البياني
    new Chart(canvas, chartData.config);
    
    // تحويل إلى صورة وإضافتها للـ PDF
    const chartImage = await html2canvas(canvas);
    const imgData = chartImage.toDataURL('image/png');
    
    pdf.addImage(imgData, 'PNG', 30, yPosition, 150, 75);
    
    // عنوان الرسم البياني
    pdf.setFontSize(12);
    pdf.setTextColor(0, 0, 0);
    pdf.text(chartData.title, pageWidth / 2, yPosition + 80, { align: 'center' });
    
    yPosition += 100;
    
    // إضافة صفحة جديدة إذا لزم الأمر
    if (yPosition > 200) {
      pdf.addPage();
      yPosition = 30;
    }
  }
}

async function addFinalRecommendations(pdf: jsPDF, data: ReportData) {
  const pageWidth = pdf.internal.pageSize.getWidth();
  
  // عنوان الصفحة
  pdf.setFontSize(24);
  pdf.setTextColor(212, 175, 55);
  pdf.text(
    data.language === 'ar' ? 'التوصيات والخطوات التالية' : 'Recommendations & Next Steps',
    pageWidth / 2,
    30,
    { align: 'center' }
  );

  // التوصيات حسب الفئة
  const recommendationCategories = [
    {
      title: data.language === 'ar' ? 'توصيات فورية' : 'Immediate Actions',
      items: data.executiveSummary.recommendations.slice(0, 3)
    },
    {
      title: data.language === 'ar' ? 'توصيات متوسطة المدى' : 'Medium-term Actions',
      items: data.executiveSummary.recommendations.slice(3, 6)
    },
    {
      title: data.language === 'ar' ? 'توصيات طويلة المدى' : 'Long-term Actions',
      items: data.executiveSummary.recommendations.slice(6)
    }
  ];

  let yPosition = 60;
  
  recommendationCategories.forEach(category => {
    pdf.setFontSize(14);
    pdf.setTextColor(212, 175, 55);
    pdf.text(category.title, 30, yPosition);
    
    yPosition += 10;
    pdf.setFontSize(11);
    pdf.setTextColor(0, 0, 0);
    
    category.items.forEach((item, index) => {
      const lines = pdf.splitTextToSize(`${index + 1}. ${item}`, pageWidth - 70);
      pdf.text(lines, 40, yPosition);
      yPosition += lines.length * 5 + 5;
    });
    
    yPosition += 10;
  });

  // ملاحظة ختامية
  pdf.setFontSize(10);
  pdf.setTextColor(100, 100, 100);
  const disclaimer = data.language === 'ar' ?
    'هذا التقرير تم إنشاؤه بواسطة نظام FinClick.AI للتحليل المالي الذكي. النتائج والتوصيات مبنية على البيانات المقدمة وأفضل الممارسات في الصناعة.' :
    'This report was generated by FinClick.AI Intelligent Financial Analysis System. Results and recommendations are based on provided data and industry best practices.';
  
  const disclaimerLines = pdf.splitTextToSize(disclaimer, pageWidth - 60);
  pdf.text(disclaimerLines, 30, 250);
}

function addPageNumbers(pdf: jsPDF) {
  const pageCount = pdf.getNumberOfPages();
  
  for (let i = 1; i <= pageCount; i++) {
    pdf.setPage(i);
    pdf.setFontSize(10);
    pdf.setTextColor(150, 150, 150);
    pdf.text(
      `${i} / ${pageCount}`,
      pdf.internal.pageSize.getWidth() / 2,
      pdf.internal.pageSize.getHeight() - 10,
      { align: 'center' }
    );
  }
}

function addWatermark(pdf: jsPDF, language: 'ar' | 'en') {
  const pageCount = pdf.getNumberOfPages();
  
  for (let i = 1; i <= pageCount; i++) {
    pdf.setPage(i);
    pdf.setFontSize(50);
    pdf.setTextColor(200, 200, 200, 0.1);
    pdf.text(
      'FinClick.AI',
      pdf.internal.pageSize.getWidth() / 2,
      pdf.internal.pageSize.getHeight() / 2,
      {
        align: 'center',
        angle: 45
      }
    );
  }
}

async function loadImage(src: string): Promise<string> {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.onload = () => {
      const canvas = document.createElement('canvas');
      canvas.width = img.width;
      canvas.height = img.height;
      const ctx = canvas.getContext('2d');
      ctx?.drawImage(img, 0, 0);
      resolve(canvas.toDataURL('image/png'));
    };
    img.onerror = reject;
    img.src = src;
  });
}

export default {
  generatePDFReport
};
